---
import { getCollection, getEntry } from "astro:content";
import { fade } from "astro:transitions";
import { AUTHOR } from "@consts";
import BaseLayout from "@layouts/BaseLayout.astro";
import Post from "@components/Post.astro";

const posts = await getCollection("posts", ({ data }) => {
  return data.draft !== true;
});
const covers = Object.fromEntries(
  await Promise.all(
    posts.map(async (post) => {
      const cover = await getEntry(post.data.cover);
      return [post.slug, cover];
    }),
  ),
);
const frontmatters = Object.fromEntries(
  await Promise.all(
    posts.map(async (post) => {
      const { remarkPluginFrontmatter: frontmatter } = await post.render();
      return [post.slug, frontmatter];
    }),
  ),
);
---

<BaseLayout tab="blog" title={AUTHOR.name} description="My homepage.">
  <div
    class="flex flex-col gap-16"
    transition:animate={fade({ duration: "0.1s" })}
  >
    <div class="flex flex-col gap-4">
      {
        posts
          .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
          .map((post) => (
            <Post
              link={post.slug}
              image={covers[post.slug].data.square}
              title={post.data.title}
              description={frontmatters[post.slug].description}
              date={post.data.date}
            />
          ))
      }
    </div>
  </div>
</BaseLayout>
