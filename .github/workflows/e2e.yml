name: Test (E2E)

on:
  workflow_call:
    inputs:
      url:
        required: true
        type: string
      environment:
        required: true
        type: string

env:
  ARTIFACT: screenshots
  OUTPUT_DIR: screenshots

jobs:
  lighthouse:
    strategy:
      matrix:
        form: [desktop, mobile]
        url: ["/", "/research/"]
        include:
          - form: desktop
            preset: --collect.settings.preset=desktop
          - form: mobile
            preset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Lighthouse
        run: npm install && npm install -g @lhci/cli@0.9.x
      - name: Run Lighthouse
        run: lhci autorun ${{ inputs.lhci_args }} ${{ matrix.preset }} --collect.url="${{ inputs.url }}${{ matrix.url }}"
        env:
          LHCI_CONFIG: tests/lighthouserc.${{ inputs.environment }}.cjs
          LHCI_GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}

  snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Test for public vulnerabilities
        uses: lirantal/is-website-vulnerable@master
        with:
          scan-url: "${{ inputs.url }}"

  screenshot:
    strategy:
      matrix:
        browser: [chrome, firefox, safari]
        platform: [desktop, mobile]
        theme: [dark, light]
        include:
          - browser: chrome
            os: windows-latest
          - browser: firefox
            os: ubuntu-latest
          - browser: safari
            os: macos-latest
          - platform: desktop
            width: 1600
            height: 1200
            dpr: 2.0
          - platform: mobile
            width: 400
            height: 800
            dpr: 3.0
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install selenium
        run: |
          pip3 install selenium
          pip3 install --upgrade requests
      - name: Run selenium
        run: >
          python3 tests/screenshot.py
          --browser=${{ matrix.browser }}
          --platform=${{ matrix.platform }}
          --theme=${{ matrix.theme }}
          --width=${{ matrix.width }}
          --height=${{ matrix.height }}
          --dpr=${{ matrix.dpr }}
          --out="${{ matrix.browser }}-${{ matrix.platform }}-${{ matrix.theme }}.png"
          --url="${{ inputs.url }}"
          --retries=3
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: "${{ matrix.browser }}-${{ matrix.platform }}-${{ matrix.theme }}.png"
          retention-days: 1

  upload-screenshots:
    needs: screenshot
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.OUTPUT_DIR }}
      - name: Deploy screenshots
        id: deploy
        run: |
          OUTPUT=$(mktemp)
          netlify --telemetry-disable deploy --json --message screenshots --dir=${{ env.OUTPUT_DIR }} | tee $OUTPUT
          echo "url=$(jq -r '.deploy_url' $OUTPUT)" >> ${GITHUB_OUTPUT}
          echo "deploy_id=$(jq -r '.deploy_id' $OUTPUT)" >> ${GITHUB_OUTPUT}
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: exercism/pr-commenter-action@v1.3.0
        with:
          github-token: "${{ github.token }}"
          config-file: ".github/comment-screenshot.yml"
          template-variables: |
            {
              "id":   "${{ steps.deploy.outputs.deploy_id }}",
              "base": "${{ steps.deploy.outputs.url }}",
              "url":  "${{ inputs.url }}"
            }
