---
import { type ImageMetadata } from "astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { fade } from "astro:transitions";
import CoverButton from "~/components/CoverButton.astro";
import CoverImage from "~/components/CoverImage.astro";
import PhotoViewer from "~/components/PhotoViewer.tsx";

export interface CoverData {
  wide: ImageMetadata;
  square: ImageMetadata;
  description: string;
}

export interface CoverMeta {
  id?: string;
  data: CoverData;
}

export type CoverType = CollectionEntry<"photos"> | CoverData;

interface Props {
  image: CoverMeta;
  previous?: string;
  next?: string;
  actionHref?: string;
  actionDownload?: string;
  actionIcon?: string;
  actionAlt?: string;
}
const {
  image,
  previous,
  next,
  actionHref,
  actionDownload,
  actionIcon,
  actionAlt,
} = Astro.props;
---

<div class="group/cover relative z-50 lg:pt-12 print:pt-0">
  <div
    class:list={[
      "aspect-video max-sm:aspect-square",
      "bg-stone-200/20 shadow shadow-stone-800/20 sm:rounded-2xl",
      "lg:scale-125 lg:shadow-lg print:scale-100 print:shadow-none",
    ]}
  >
    <div transition:animate={fade({ duration: "0.1s" })}>
      <CoverImage
        class="object-cover max-sm:w-screen sm:rounded-2xl"
        cover={image}
      />
      <div
        class="absolute inset-2 flex flex-col items-end justify-between max-sm:items-end"
      >
        <div class="flex flex-row">
          <div class="h-12 w-12 grow"></div>
          <PhotoViewer client:only="react">
            <Image
              alt={image.data.description}
              class="touch-auto"
              format="jpg"
              height={image.data.wide.height}
              slot="image"
              src={image.data.wide}
              width={image.data.wide.width}
            />
            <CoverButton
              icon="heroicons:arrows-pointing-out-solid"
              slot="openButton"
            />
            <CoverButton icon="heroicons:x-mark-solid" slot="closeButton" />
          </PhotoViewer>
        </div>
        <div class="flex w-full flex-row justify-between">
          {
            previous !== undefined && (
              <a aria-label="Previous item" class="group" href={previous}>
                <CoverButton icon="heroicons:chevron-left-solid" />
              </a>
            )
          }
          <div class="grow"></div>
          {
            next !== undefined && (
              <a aria-label="Next item" class="group" href={next}>
                <CoverButton icon="heroicons:chevron-right-solid" />
              </a>
            )
          }
        </div>
        {
          actionHref !== undefined && (
            <a
              aria-label={actionAlt}
              class="group"
              download={actionDownload}
              href={actionHref}
            >
              <CoverButton icon={actionIcon} />
            </a>
          )
        }
      </div>
    </div>
  </div>
</div>
