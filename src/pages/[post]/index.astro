---
import { type InferGetStaticPropsType } from "astro";
import { render } from "astro:content";
import Cover, { type CoverType } from "~/components/Cover.astro";
import License from "~/components/License.astro";
import { getPages, getPosts } from "~/content.ts";
import { getCover } from "~/image.ts";
import ArticleLayout from "~/layouts/ArticleLayout.astro";

export async function getStaticPaths() {
  const pages = await getPages();
  const posts = await getPosts();
  return [
    ...pages.map((page) => ({
      params: { post: page.id },
      props: { post: page, license: false },
    })),
    ...posts.map((post) => ({
      params: { post: post.id.replace(/^posts\//, "") },
      props: { post, license: true },
    })),
  ];
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post, license }: Props = Astro.props;
const posts = await getPosts();
const index = posts.findIndex((other) => other.id === post.id);
const { Content } = await render(post);
const cover = await getCover(post.data.cover as CoverType);
---

<ArticleLayout
  date={post.data.date}
  description={post.data.description}
  keywords={post.data.tags}
  tab={post.data.tab ?? "posts"}
  title={post.data.title}
>
  <Cover
    actionAlt="Image details"
    actionHref={cover.id && `/photography/${cover.id}`}
    actionIcon="heroicons:photo-solid"
    image={cover}
    next={posts[index + 1]?.id}
    previous={posts[index - 1]?.id}
    slot="cover"
  />
  <Content slot="content" />
  {
    license ? (
      <License icons="🅭🄍" slot="license">
        This article is dedicated to the public domain under the{" "}
        <a
          href="https://creativecommons.org/publicdomain/zero/1.0/"
          rel="license"
        >
          Creative Commons CC0 1.0 Universal (CC0 1.0)
        </a>{" "}
        license. You can copy, modify, distribute and perform the work, even for
        commercial purposes, all without asking permission.
      </License>
    ) : undefined
  }
</ArticleLayout>
