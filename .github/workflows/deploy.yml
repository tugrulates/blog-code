name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      container:
        required: true
        type: string
      update_docs:
        required: false
        type: boolean
      deploy_args:
        required: false
        type: string
    outputs:
      url:
        description: "URL for deployed site"
        value: ${{ jobs.deploy.outputs.url }}

env:
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: ${{ inputs.container }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo chown $(whoami) .
      - if: ${{ inputs.update_docs }}
        run: git submodule update --init --recursive --remote docs
      - run: npm ci
      - run: npm run build -- --context ${{ inputs.environment }}
      - uses: actions/upload-artifact@v3
        with:
          - name: public
          - path: public

  check:
    needs: build
    runs-on: ubuntu-latest
    container: ${{ inputs.container }}
    steps:
      - uses: actions/checkout@v3
      - run: npm run build -- --context check
      - run: npm run build -- --context lighthouse-desktop
      - run: npm run build -- --context lighthouse-mobile
      - uses: actions/upload-artifact@v3
        with:
          - name: lighthouse
          - path: public/lighthouse

  deploy:
    needs: build
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    environment:
      name: ${{ inputs.environment}}
      url: ${{ steps.deploy.outputs.url }}
    runs-on: ubuntu-latest
    container: ${{ inputs.container }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          - name: public
          - path: public
      - id: deploy
        run: |
          OUTPUT=$(mktemp)
          npm run deploy --silent -- --json \
            --message ${{ github.ref_name }} ${{ inputs.deploy_args }} | tee ${OUTPUT}
          echo "url=$(jq -r '.url,.deploy_url' ${OUTPUT} | grep https | head -n 1)" >> ${GITHUB_OUTPUT}
          echo "deploy_id=$(jq -r '.deploy_id' ${OUTPUT})" >> ${GITHUB_OUTPUT}
      - if: ${{ github.event_name == 'pull_request' }}
        uses: exercism/pr-commenter-action@v1.3.0
        with:
          github-token: "${{ github.token }}"
          config-file: ".github/comment-preview.yml"
          template-variables: |
            {
              "id":  "${{ steps.deploy.outputs.deploy_id }}",
              "url": "${{ steps.deploy.outputs.url }}"
            }
