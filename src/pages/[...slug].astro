---
import { getCollection, getEntry } from "astro:content";
import Article from "@components/Article.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import Cover from "@components/Cover.astro";

export async function getStaticPaths() {
  const pages = await getCollection("pages");
  const posts = await getCollection("posts");
  return [...pages, ...posts].map((page) => ({
    params: { slug: page.slug },
    props: { page },
  }));
}

const { page } = Astro.props;
const posts = (
  await getCollection("posts", ({ data }) => {
    return data.draft !== true;
  })
).sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
const index = posts.findIndex((other) => other.id === page.id);
const { Content, remarkPluginFrontmatter } = await page.render();
const cover = await getEntry(page.data.cover);
if (!cover) {
  throw new Error(`Cover not found for page ${page.id}`);
}
---

<BaseLayout
  tab={page.data.tab ?? "blog"}
  title={page.data.title}
  description={remarkPluginFrontmatter.description}
>
  <div class="flex flex-col items-center gap-4 sm:gap-12 lg:gap-20">
    <Cover
      image={cover}
      previous={index > 0 && `./${posts[index - 1].slug}`}
      next={index >= 0 &&
        index < posts.length - 1 &&
        `./${posts[index + 1].slug}`}
      action_href={`/photography/${cover.id}`}
      action_icon="/icons/link-image.svg"
      action_alt="Image details"
    />
    <Article title={page.data.title} date={page.data.date}>
      <Content />
    </Article>
  </div>
</BaseLayout>
