---
import { getImage } from "astro:assets";
import { DIMENSIONS } from "@consts";

const { image, className } = Astro.props;

const [rectangle, square] = await Promise.all([
  Promise.all(
    [1, 2, 3, 4].map(async (scale) =>
      getImage({
        src: image.data.rectangle,
        format: "webp",
        width: DIMENSIONS.desktop_cover_width * scale,
        height: DIMENSIONS.desktop_cover_height * scale,
      }),
    ),
  ),
  Promise.all(
    [1, 2, 3, 4].map(async (scale) =>
      getImage({
        src: image.data.square,
        format: "webp",
        width: DIMENSIONS.mobile_cover_size * scale,
        height: DIMENSIONS.mobile_cover_size * scale,
      }),
    ),
  ),
]);
---

<picture class="object-contain">
  <source
    media="(orientation: landscape)"
    srcset={`${rectangle[0].src} 1x, ${rectangle[1].src} 2x, ${rectangle[2].src} 3x, ${rectangle[3].src} 4x`}
  />
  <source
    media={`(max-width: ${DIMENSIONS.mobile_cover_size - 1}px)`}
    srcset={`${square[0].src} 1x, ${square[1].src} 2x, ${square[2].src} 3x, ${square[3].src} 4x`}
  />
  <source
    media={`(min-width: ${DIMENSIONS.mobile_cover_size}px)`}
    srcset={`${rectangle[0].src} 1x, ${rectangle[1].src} 2x, ${rectangle[2].src} 3x, ${rectangle[3].src} 4x`}
  />
  <img
    class:list={[
      "h-full w-full max-sm:aspect-square sm:aspect-video",
      className,
    ]}
    src={image.data.cover}
    alt={image.data.description}
    width={DIMENSIONS.desktop_cover_width}
    height={DIMENSIONS.desktop_cover_height}
  />
</picture>
