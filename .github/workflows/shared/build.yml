name: Build

on:
  workflow_call:
    inputs:
      latest:
        required: false
        type: boolean
      update_docs:
        required: false
        type: boolean
      build_args:
        required: false
        type: string
    outputs:
      artifact:
        description: "Build artifact name"
        value: ${{ jobs.build.outputs.artifact }}
      container:
        description: "Container tag"
        value: ${{ jobs.container.outputs.container }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/blog-devcontainer
  OUTPUT_DIR: public
  ARTIFACT: build

jobs:
  container:
    outputs:
      container: ${{ steps.name.outputs.container }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: "${{ github.token }}"

      - name: Container metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=tugrul-blog-devcontainer
            org.opencontainers.image.description="Devcontainer for building tugrul.blog (https://containers.dev)"
          flavor: latest=${{ inputs.latest }}
          sep-tags: ","

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check diff
        id: name
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          git fetch origin main
          if [[ $(git diff origin/main --name-only .devcontainer) ]]; then
            echo "container=${TAGS##*,}" >> ${GITHUB_OUTPUT}
            echo "build=true" >> ${GITHUB_OUTPUT}
          else
            echo "container=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> ${GITHUB_OUTPUT}
          fi

      - name: Build and Push
        if: steps.name.outputs.build
        uses: docker/build-push-action@v3
        with:
          context: "{{ defaultContext }}:.devcontainer"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ steps.name.outputs.tag }}
          cache-to: type=inline

  build:
    needs: container
    outputs:
      artifact: ${{ env.ARTIFACT }}
    runs-on: ubuntu-latest
    container: ${{ needs.container.outputs.container }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup permissions
        run: sudo chown $(whoami) .

      - name: Update docs
        if: inputs.update_docs
        run: git submodule update --init --recursive --remote docs

      - name: Install node dependencies
        run: npm ci

      - name: Build site
        run: npm run build -- ${{ inputs.build_args }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.OUTPUT_DIR }}
