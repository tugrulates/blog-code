---
import { type InferGetStaticPropsType, type GetStaticPaths } from "astro";
import { getEntry, type CollectionEntry } from "astro:content";
import Article from "@/components/Article.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Cover, { type CoverData } from "@/components/Cover.astro";
import { getPages, getPosts } from "@/content";

export const getStaticPaths = (async () => {
  const pages = await getPages();
  const posts = await getPosts();
  return [...pages, ...posts].map((page) => ({
    params: { slug: page.slug },
    props: { page },
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export async function getCover(
  page: CollectionEntry<"pages"> | CollectionEntry<"posts">,
): Promise<CoverData> {
  if (
    "collection" in page.data.cover &&
    page.data.cover.collection === "photos"
  ) {
    const entry = await getEntry(page.data.cover);
    return entry;
  }
  if ("data" in page.data.cover) {
    return {
      id: undefined,
      data: page.data.cover.data,
    };
  }
  throw new Error(`Invalid page: ${page.id}`);
}

const { page } = Astro.props;
const posts = await getPosts();
const index = posts.findIndex((other) => other.id === page.id);
const { Content, remarkPluginFrontmatter } = await page.render();
const cover = await getCover(page);
---

<BaseLayout
  tab={page.data.tab ?? "posts"}
  title={page.data.title}
  description={remarkPluginFrontmatter.description}
  keywords={page.data.tags}
  image={cover.data.wide}
  imageDescription={cover.data.description}
  date={page.data.date}
>
  <div class="flex flex-col items-center gap-4 sm:gap-12 lg:gap-24">
    <Cover
      image={cover}
      previous={index > 0 ? `./${posts[index - 1].slug}` : undefined}
      next={index >= 0 && index < posts.length - 1
        ? `./${posts[index + 1].slug}`
        : undefined}
      actionHref={cover.id !== undefined
        ? `/photography/${cover.id}`
        : undefined}
      actionIcon="heroicons:photo-solid"
      actionAlt="Image details"
    />
    <Article title={page.data.title} date={page.data.date}>
      <Content />
    </Article>
  </div>
</BaseLayout>
